#!/usr/bin/env bash
#################################################################
#Script          :       ESTIMATION
#
#Purpose         :       Starten von ESTIMATION
#
#Programmer      :       Alexander Wichmann
#
#History         :       December 2013
#
#################################################################

#export MODELDIR=$MODELDIR
#export TNETHOME=$TNETHOME

tramsition="null"
nice=4

#############################################################################
# clear files                 
#############################################################################
function clearfiles
{
  \rm -f "$MODEL_ERC.c"
  \rm -f "$MODEL_RDY.c"
  \rm -f "$MODEL_MDF.c"
  \rm -f "$MODEL.DEFINFO"
  \rm -f "$MODEL.TN"
  \rm -f "$MODEL.RESULTS"
  \rm -f "$MODEL.PARAM"

  mkdir -p "$MODEL.dir"

  if [ -e "${MODEL}.ECS" ];  then
    mv "$MODEL.ECS" "$MODEL.dir"
  fi
  if [ -e "${MODEL}.INV" ];  then
    mv "$MODEL.INV" "$MODEL.dir"
  fi
  if [ -e "${MODEL}.STRUCT" ];  then
    mv "$MODEL.STRUCT" "$MODEL.dir"
  fi
    if [ -e "${MODEL}.ESTIM" ];  then
    mv "$MODEL.ESTIM" "$MODEL.dir"
  fi
}


usage="Usage : ESTIMATION model <transition>"

#input netname
if [ $# -lt 1 ]; then
	echo $usage
  exit 1
fi
if [ $# -eq 1 ]; then
 if [ "$1" = "-h" -o "$1" = "-help" ]; then
    echo $usage
    exit 1
 fi
fi

# check environment
if [ "$TNETHOME" = "" ]; then
	echo "Environment variable TNETHOME is not set"
	exit
fi
if [ ! -d "$TNETHOME" ]; then
	echo "Environment variable TNETHOME is not a directory"
	exit
fi
if [ "$MODELDIR" = "" ]; then
	echo "Environment variable MODELDIR is not set"
	exit
fi
if [ ! -d "$MODELDIR" ]; then
	echo "Environment variable MODELDIR is not a directory"
	exit
fi

# set path names
BIN_DIR=${TNETHOME}/EDSPN/Simulation/bin
SIM_DIR=${TNETHOME}/EDSPN/Simulation
SHARED_BIN_DIR=${TNETHOME}/EDSPN/Shared/bin
NAME=$1
MODEL="$MODELDIR/$NAME"

# check net
if [ ! -e "$MODEL.TN" ];  then
     # if only xml-file exists, use xml2tn exporter to create TN-file
     if [ -e "$MODEL.xml" ];  then
        cd "${TNETHOME}/EDSPNGen"
        ./xml2tn.sh "$MODEL.xml"
        cd $currentdir
     else
        echo "No such net"
        echo
        exit -1
     fi
fi


if [ $# -ge 2 ]; then
        transition=$2
else
       echo "No transition"
       echo
       exit -1
fi


#############################################################################
# marking dependencies, definition of rewardmeasures
#
# execute 'proc_TN'
#############################################################################
"${SHARED_BIN_DIR}/proc_tn" -s "$NAME"
if [ $? -ne 0 ]; then
  echo
  echo ERROR STATE $STATUS occurred while PROC_TN execution.
  # $unlock_model $NAME
  echo SOLUTION OF MODEL $NAME FAILED.
  echo
  clearfiles
  exit -1
fi
# echo "proc_tn done."

#############################################################################
# structural analysis
#
# execute 'struc_tn'
#############################################################################
"${SHARED_BIN_DIR}/struct_tn" -i "$NAME"
if [ $? -ne 0 ]; then
  echo
  echo ERROR STATE $STATUS occurred while STRUCT_TN execution.
  # $unlock_model $NAME
  echo SOLUTION OF MODEL $NAME FAILED.	
  echo
  clearfiles
  exit -1
fi
# echo "struct_tn done."



echo ""
echo "STARTING ESTIMATION"
echo ""

"${BIN_DIR}/sim_rst_estimation" "$NAME" "$transition"
if [ $? -ne 0 ]; then
  echo
  echo ERROR STATE $STATUS occurred while ESTIMATION execution.
  # $unlock_model $NAME
  echo
  clearfiles
  exit -1
fi
# echo "ESTIMATION done."

echo ""
echo "ESTIMATION finished."

clearfiles
